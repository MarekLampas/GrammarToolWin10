<?xml version="1.0"?>
<Scanner xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <_scannerName>Python</_scannerName>
  <_tokenDefinitions>
    <TokenDefinition>
      <_regexPattern>^==</_regexPattern>
      <_returnsToken>Equals</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^!=</_regexPattern>
      <_returnsToken>NotEquals</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^not</_regexPattern>
      <_returnsToken>Not</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^&lt;=</_regexPattern>
      <_returnsToken>LessOrSameThan</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^&gt;=</_regexPattern>
      <_returnsToken>MoreOrSameThan</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^&lt;</_regexPattern>
      <_returnsToken>LessThan</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^&gt;</_regexPattern>
      <_returnsToken>MoreThan</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^=</_regexPattern>
      <_returnsToken>Assign</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^:</_regexPattern>
      <_returnsToken>Colon</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^\.</_regexPattern>
      <_returnsToken>Dot</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^,</_regexPattern>
      <_returnsToken>Comma</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^\(</_regexPattern>
      <_returnsToken>RoundBracketOpen</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^\)</_regexPattern>
      <_returnsToken>RoundBracketClose</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^{</_regexPattern>
      <_returnsToken>CurlyBracketOpen</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^}</_regexPattern>
      <_returnsToken>CurlyBracketClose</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^\[</_regexPattern>
      <_returnsToken>SquareBracketOpen</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^\]</_regexPattern>
      <_returnsToken>SquareBracketClose</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^\d+</_regexPattern>
      <_returnsToken>Number</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^\+\+</_regexPattern>
      <_returnsToken>Increment</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^--</_regexPattern>
      <_returnsToken>Decrement</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^\+</_regexPattern>
      <_returnsToken>Plus</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^-</_regexPattern>
      <_returnsToken>Minus</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^\*</_regexPattern>
      <_returnsToken>Multiply</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^/</_regexPattern>
      <_returnsToken>Devide</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^and</_regexPattern>
      <_returnsToken>And</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^or</_regexPattern>
      <_returnsToken>Or</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^in</_regexPattern>
      <_returnsToken>In</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^if</_regexPattern>
      <_returnsToken>If</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^elif</_regexPattern>
      <_returnsToken>Elif</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^else</_regexPattern>
      <_returnsToken>Else</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^foreach</_regexPattern>
      <_returnsToken>Foreach</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^for</_regexPattern>
      <_returnsToken>For</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^True|^False</_regexPattern>
      <_returnsToken>BoolValue</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^None</_regexPattern>
      <_returnsToken>Undefined</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^break</_regexPattern>
      <_returnsToken>Break</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^continue</_regexPattern>
      <_returnsToken>Continue</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^print</_regexPattern>
      <_returnsToken>Print</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^["'][^'"]*['"]</_regexPattern>
      <_returnsToken>StringValue</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^[a-zA-Z][a-zA-Z0-9]+</_regexPattern>
      <_returnsToken>Identifier</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
  </_tokenDefinitions>
</Scanner>
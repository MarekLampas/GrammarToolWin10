<?xml version="1.0"?>
<Scanner xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <_scannerName>C#</_scannerName>
  <_tokenDefinitions>
    <TokenDefinition>
      <_regexPattern>^==</_regexPattern>
      <_returnsToken>Equals</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^!=</_regexPattern>
      <_returnsToken>NotEquals</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^!</_regexPattern>
      <_returnsToken>Not</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^&lt;=</_regexPattern>
      <_returnsToken>LessOrSameThan</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^&gt;=</_regexPattern>
      <_returnsToken>MoreOrSameThan</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^&lt;</_regexPattern>
      <_returnsToken>LessThan</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^&gt;</_regexPattern>
      <_returnsToken>MoreThan</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^=</_regexPattern>
      <_returnsToken>Assign</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^:</_regexPattern>
      <_returnsToken>Colon</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^;</_regexPattern>
      <_returnsToken>Semicolon</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^\.</_regexPattern>
      <_returnsToken>Dot</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^,</_regexPattern>
      <_returnsToken>Comma</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^\(</_regexPattern>
      <_returnsToken>RoundBracketOpen</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^\)</_regexPattern>
      <_returnsToken>RoundBracketClose</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^{</_regexPattern>
      <_returnsToken>CurlyBracketOpen</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^}</_regexPattern>
      <_returnsToken>CurlyBracketClose</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^\[</_regexPattern>
      <_returnsToken>SquareBracketOpen</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^\]</_regexPattern>
      <_returnsToken>SquareBracketClose</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^\d+\.\d+|^\d+</_regexPattern>
      <_returnsToken>Number</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^\+\+</_regexPattern>
      <_returnsToken>Increment</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^--</_regexPattern>
      <_returnsToken>Decrement</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^\+</_regexPattern>
      <_returnsToken>Plus</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^-</_regexPattern>
      <_returnsToken>Minus</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^\*</_regexPattern>
      <_returnsToken>Multiply</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^/</_regexPattern>
      <_returnsToken>Devide</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^var</_regexPattern>
      <_returnsToken>Variable</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^bool|^int|^float|^double|^string</_regexPattern>
      <_returnsToken>DataType</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^List</_regexPattern>
      <_returnsToken>List</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^Dictionary</_regexPattern>
      <_returnsToken>Dictionary</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^public|^private|^internal</_regexPattern>
      <_returnsToken>AccessModifier</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^class</_regexPattern>
      <_returnsToken>Class</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^&amp;&amp;</_regexPattern>
      <_returnsToken>And</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^\|\|</_regexPattern>
      <_returnsToken>Or</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^in</_regexPattern>
      <_returnsToken>In</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^if</_regexPattern>
      <_returnsToken>If</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^else</_regexPattern>
      <_returnsToken>Else</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^foreach</_regexPattern>
      <_returnsToken>Foreach</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^for</_regexPattern>
      <_returnsToken>For</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^true|^false</_regexPattern>
      <_returnsToken>BoolValue</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^null</_regexPattern>
      <_returnsToken>Undefined</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^switch</_regexPattern>
      <_returnsToken>Switch</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^case</_regexPattern>
      <_returnsToken>Case</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^break</_regexPattern>
      <_returnsToken>Break</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^continue</_regexPattern>
      <_returnsToken>Continue</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^Console.WriteLine|^Console.Write</_regexPattern>
      <_returnsToken>Print</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^["'][^'"]*['"]</_regexPattern>
      <_returnsToken>StringValue</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
    <TokenDefinition>
      <_regexPattern>^[a-zA-Z][a-zA-Z0-9]*</_regexPattern>
      <_returnsToken>Identifier</_returnsToken>
      <_isChecked>true</_isChecked>
    </TokenDefinition>
  </_tokenDefinitions>
</Scanner>